### code for validation ###

import numpy as np
import pandas as pd
from keras.utils import np_utils
from keras.models import Sequential
from keras.layers import Dense, Dropout
import random
from sklearn.metrics import roc_auc_score
from sklearn.metrics import roc_curve
from sklearn.metrics import auc
from keras.models import load_model
# input test data
x_val = pd.read_csv( '# Location of Your validation input data file: *.csv#', delimiter=',' ,header=0)
y_val = pd.read_csv( '# Location of Your primary endpoint (HFrEF) file: *.csv#', delimiter=',' ,header=0)
y5_val = pd.read_csv( '# Location of Your secondary endpoint (HF with mid-range to reduced EF) file: *.csv#', delimiter=',' ,header=0)

# load model
loaded_model = load_model('# Location of "dehf.h5" file#')

# prediction
pred_y = loaded_model.predict(x_val)


# performance checking
print("=============================================================================")
print("area under the ROC curve (AUROC) for HFrEF: {:0.3f}".format(roc_auc_score(y_val, pred_y)))
print("area under the ROC curve (AUROC) for HF with mid-range to reduced EF: {:0.3f}".format(roc_auc_score(y5_val, pred_y)))

### example ###

import numpy as np
import pandas as pd
from keras.utils import np_utils
from keras.models import Sequential
from keras.layers import Dense, Dropout
import random
from sklearn.metrics import roc_auc_score
from sklearn.metrics import roc_curve
from sklearn.metrics import auc
from keras.models import load_model
# input test data
x_val = pd.read_csv( 'D:/decg_hf_feature/x_sample.csv', delimiter=',' ,header=0)
y_val = pd.read_csv( 'D:/decg_hf_feature/y_sample.csv', delimiter=',' ,header=0)
y5_val = pd.read_csv( 'D:/decg_hf_feature/y5_sample.csv', delimiter=',' ,header=0)

# load model
loaded_model = load_model('D:/decg_hf_feature/dehf.h5')

# prediction
pred_y = loaded_model.predict(x_val)


# performance checking
print("=============================================================================")
print("area under the ROC curve (AUROC) for HFrEF: {:0.3f}".format(roc_auc_score(y_val, pred_y)))
print("area under the ROC curve (AUROC) for HF with mid-range to reduced EF: {:0.3f}".format(roc_auc_score(y5_val, pred_y)))
